class ModelConstants:
    __modelConstants = {
        "bed_bath_table": {
            "product_score": 3.908197,
            "freight_price": 16.819672,
            "lag_price": 80.040119,
            "fp1": 17.658762,
            "comp_2": 100.015623,
            "ps2": 3.981967,
            "fp2": 16.837454,
            "bed_bath_table": 1,
            "computers_accessories": 0,
            "consoles_games": 0,
            "cool_stuff": 0,
            "furniture_decor": 0,
            "garden_tools": 0,
            "health_beauty": 0,
            "perfumery": 0,
            "watches_gifts": 0,
        },
        "computers_accessories": {
            "product_score": 3.985507,
            "freight_price": 25.103741,
            "lag_price": 122.003217,
            "fp1": 40.802253,
            "comp_2": 142.721842,
            "ps2": 4.192754,
            "fp2": 26.991826,
            "bed_bath_table": 0,
            "computers_accessories": 1,
            "consoles_games": 0,
            "cool_stuff": 0,
            "furniture_decor": 0,
            "garden_tools": 0,
            "health_beauty": 0,
            "perfumery": 0,
            "watches_gifts": 0,
        },
        "consoles_games": {
            "product_score": 4.063636,
            "freight_price": 14.809415,
            "lag_price": 25.999675,
            "fp1": 15.180130,
            "comp_2": 26.966017,
            "ps2": 3.940909,
            "fp2": 14.438699,
            "bed_bath_table": 0,
            "computers_accessories": 0,
            "consoles_games": 1,
            "cool_stuff": 0,
            "furniture_decor": 0,
            "garden_tools": 0,
            "health_beauty": 0,
            "perfumery": 0,
            "watches_gifts": 0,
        },
        "cool_stuff": {
            "product_score": 4.207018,
            "freight_price": 18.975096,
            "lag_price": 107.168055,
            "fp1": 17.448823,
            "comp_2": 120.832180,
            "ps2": 4.303509,
            "fp2": 19.944313,
            "bed_bath_table": 0,
            "computers_accessories": 0,
            "consoles_games": 0,
            "cool_stuff": 1,
            "furniture_decor": 0,
            "garden_tools": 0,
            "health_beauty": 0,
            "perfumery": 0,
            "watches_gifts": 0,
        },
        "furniture_decor": {
            "product_score": 3.979167,
            "freight_price": 16.944617,
            "lag_price": 80.501241,
            "fp1": 16.535042,
            "comp_2": 38.726250,
            "ps2": 3.7250,
            "fp2": 14.716151,
            "bed_bath_table": 0,
            "computers_accessories": 0,
            "consoles_games": 0,
            "cool_stuff": 0,
            "furniture_decor": 1,
            "garden_tools": 0,
            "health_beauty": 0,
            "perfumery": 0,
            "watches_gifts": 0,
        },
        "garden_tools": {
            "product_score": 4.161875,
            "freight_price": 28.458310,
            "lag_price": 80.501241,
            "fp1": 18.364039,
            "comp_2": 58.194053,
            "ps2": 4.19750,
            "fp2": 21.009242,
            "bed_bath_table": 0,
            "computers_accessories": 0,
            "consoles_games": 0,
            "cool_stuff": 0,
            "furniture_decor": 0,
            "garden_tools": 1,
            "health_beauty": 0,
            "perfumery": 0,
            "watches_gifts": 0,
        },
        "health_beauty": {
            "product_score": 4.145385,
            "freight_price": 18.607448,
            "lag_price": 132.071535,
            "fp1": 14.247786,
            "comp_2": 90.587791,
            "ps2": 4.103077,
            "fp2": 15.236709,
            "bed_bath_table": 0,
            "computers_accessories": 0,
            "consoles_games": 0,
            "cool_stuff": 0,
            "furniture_decor": 0,
            "garden_tools": 0,
            "health_beauty": 1,
            "perfumery": 0,
            "watches_gifts": 0,
        },
        "perfumery": {
            "product_score": 4.35000,
            "freight_price": 14.336311,
            "lag_price": 90.596633,
            "fp1": 13.592844,
            "comp_2": 119.011526,
            "ps2": 4.392308,
            "fp2": 15.079777,
            "bed_bath_table": 0,
            "computers_accessories": 0,
            "consoles_games": 0,
            "cool_stuff": 0,
            "furniture_decor": 0,
            "garden_tools": 0,
            "health_beauty": 0,
            "perfumery": 1,
            "watches_gifts": 0,
        },
        "watches_gifts": {
            "product_score": 3.983495,
            "freight_price": 16.492840,
            "lag_price": 168.278653,
            "fp1": 13.721788,
            "comp_2": 129.618112,
            "ps2": 4.129126,
            "fp2": 17.503466,
            "bed_bath_table": 0,
            "computers_accessories": 0,
            "consoles_games": 0,
            "cool_stuff": 0,
            "furniture_decor": 0,
            "garden_tools": 0,
            "health_beauty": 0,
            "perfumery": 0,
            "watches_gifts": 1,
        },
    }

    __scaler_data_index = [
        'product_score',
        'qty',
        'freight_price',
        'product_weight_g',
        'lag_price',
        'comp_1',
        'ps1',
        'fp1',
        'comp_2',
        'ps2',
        'fp2',
        'bed_bath_table',
        'computers_accessories',
        'consoles_games',
        'cool_stuff',
        'furniture_decor',
        'garden_tools',
        'health_beauty',
        'perfumery',
        'watches_gifts',
    ]

    @staticmethod
    def fillWithDataConstants(categories: str, qty: float, product_weight: float, comp_1: float, ps1: float):
        data = ModelConstants.__modelConstants[categories]
        input_data = [qty, product_weight, comp_1, ps1]
        flag = 0
        provide = {}

        for i in range(len(ModelConstants.__scaler_data_index)):
            try:
                provide[
                    ModelConstants.__scaler_data_index[i]
                ] = data[ModelConstants.__scaler_data_index[i]]
            except KeyError as e:
                provide[ModelConstants.__scaler_data_index[i]] = input_data[flag]
                flag += 1
        return provide

    @staticmethod
    def getModelConstants():
        return ModelConstants.__scaler_data_index

# object example
# obj = ModelConstant()
# data = ModelConstant.process_data("perfumery", 2.3, 4.5, 3.4, 1.45)
# print(data)
